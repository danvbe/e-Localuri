<?php

namespace Localuri\DictionaryBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * DictionaryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DictionaryRepository extends EntityRepository
{
    /**
     * Returns an array (pair key=>value) of records with type=$type from the dictionary table
     *
     * @param null $type
     * @return array
     */
    public function getArrayValues($type = null){
        $q = $this->createQueryBuilder('d')
            ->select('d.id')
            ->where('d.type = ?',$type)
            ->andWhere('d.expires_at is null or d.expires_at <= NOW()')
            ->orderBy('d.value');

        $array = array();
        foreach($q->execute() as $dict)
            $array[$dict->getKey()] = $dict->getValue();

        return $array;
    }

    /**
     * Returns a dictionary record based on $type, $key and the date when it was saved
     * @param $key
     * @param null $type
     * @param null $date
     * @return mixed
     */
    public function getDictionary($key , $type = null , $date = null){
        $q = $this->createQueryBuilder('d')
            ->select('d.id')
            ->where('d.type = ?',$type)
            ->andWhere('d.key = ?',$key)
            ->orderBy('d.expired_at');
        if($date)
            $q->andWhere('IFNULL(d.expired_at,NOW()) > ?',$date);

        return $q->fetchOne();
    }
}